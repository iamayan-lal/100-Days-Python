#Python Dictionary
programming_dictionary = {
    "Key1" : "Value1",
    "Key2" : "Value2",
}
print(programming_dictionary["Key1"])

#Empty Dictionary
# programming_dictionary = {}
#
# #Wipe an existing dictionary
# programming_dictionary = {}
# print(programming_dictionary)

#Edit an item in a dictionary
programming_dictionary["Key1"] = "Value3"
print(programming_dictionary)

#Loop through a Dictionary
for key in programming_dictionary:
    print(key) #Prints only the KEYS
    print(programming_dictionary[key])

#Grading Program Coding Exercise
student_scores = {
    'Harry': 88,
    'Ron': 78,
    'Hermione': 95,
    'Draco': 75,
    'Neville': 60
}

# Create an empty dictionary to collect the new values.
student_grades = {}

# Loop through each key in the student_scores dictionary
for student in student_scores:

    # Get the value (student score) by using the key each time.
    score = student_scores[student]

    # Check what grade the score would get, then add it to student_grades
    if score >= 91:
        student_grades[student] = 'Outstanding'
    elif score >= 81:
        student_grades[student] = 'Exceeds Expectations'
    elif score >= 71:
        student_grades[student] = 'Acceptable'
    else:
        student_grades[student] = 'Fail'

#Nesting Loops and Dictionaries
capitals = {
    "France": "Paris",
    "Germany": "Berlin",
}
#Nested List in Dictionary
travel_log = {
    "France" : ["Paris", "Lille", "Dijon"],
    "Germany": ["Stutgart","Berlin"],
}
print(travel_log["France"][1])

#Blind Auction Program
def find_highest_bidder ():
    winner = ""
    highest_bid = 0
    for bidder in bids:
        bidder_amount = bids[bidder]
        if bidder_amount > highest_bid:
            highest_bid = bidder_amount
            winner = bidder

    print(f"{winner} is the winning bidder with amount ${highest_bid}.")

bids = {}
continue_bidding = True
while continue_bidding == True:
    name = input("What is your name? :")
    bid = int(input("What is your bid? :$"))
    bids[name] = bid

    should_continue = input("Are there any other people who want to bid? Type 'yes' or 'no'.").lower()
    if should_continue == "no":
        continue_bidding = False
        find_highest_bidder(bids)
    elif should_continue == "yes":
        print("\n"*20)
#We can also use Max() to find the maximum bid in the dictionary and find the highest bidder.
